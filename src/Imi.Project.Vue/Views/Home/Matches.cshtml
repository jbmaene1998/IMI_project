

<div class="flex-container" style="display: flex; justify-content: center;">
  <a class="btn btn-warning" href="https://localhost:44373/Home/Main" role="button">Home</a>
</div>
<div id="app" style="display: flex;justify-content: center;">
  <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel" style="height: 500px; width: 510px;">
    <div class="carousel-inner">
          <div class="carousel-item active">
          <h5 style="color: white; text-align: center; margin-top: 150px;">Swipe left or right to see your matches</h5>
          <div class="carousel-caption d-none d-md-block">
          </div>
      </div>
      <div class="carousel-item" v-for="user in users">
        <img class="d-block" src="https://thispersondoesnotexist.com/image" alt="First slide" style="height: 500px">
          <div class="carousel-caption d-none d-md-block">
              <h4>{{user.firstName}}</h4>
              <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" v-on:click=showUser(user.id)>
                Click for more info
              </button>
          </div>
      </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">{{selectedUser.firstName}} {{selectedUser.lastName}}</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
          <div class="card-body">
          <h5 class="card-title">Email</h5>
          <h6 class="card-subtitle mb-2 text-muted">{{selectedUser.email}}</h6>
          <h5 class="card-title">Country</h5>
          <h6 class="card-subtitle mb-2 text-muted">{{selectedLocation.country}}</h6>
          <h5 class="card-title">City</h5>
          <h6 class="card-subtitle mb-2 text-muted">{{selectedLocation.city}}</h6>
          <h5 class="card-title">School</h5>
          <h6 class="card-subtitle mb-2 text-muted">{{selectedSchool.name}}</h6>
          <h5 class="card-title">Job</h5>
          <h6 class="card-subtitle mb-2 text-muted">{{selectedJob.name}}</h6>
      </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
</div>

@section scripts{
 <script src="~/lib/vue/vue.js"></script>
 <script src="~/lib/axios/axios.min.js"></script>
 <script>
     var baseUrl= "https://localhost:5001/";
    const axiosConfig = { headers: {'Content-Type': 'application/json', Authorization: `Bearer ${sessionStorage.getItem('token')}`}};
    
    var app = new Vue({
        el: "#app",
        data: {
            users: [],
            userIds: [],
            firstUser: null,
            selectedUser: {},
            selectedJob: {},
            selectedSchool: {},
            selectedLocation: {}
        },
        created: function() {
          var pathUrl = `Match/recruiter/${sessionStorage.getItem('id')}`
                  axios.get(baseUrl + pathUrl, axiosConfig)
                  .then(response => 
                    (
                      matches = response.data, 
                      this.firstUser = response.data[0],
                      this.matches = matches,
                      this.getUsers(response)
                    ))
        },
        methods: {
          showUser: function(id) {
                      var pathUrl = "Student/" + id
                  axios.get(baseUrl + pathUrl, axiosConfig)
                  .then(response => {
                    test = response.data;
                      this.selectedUser = response.data,
                      this.selectedJob = response.data["job"],
                      this.selectedSchool = response.data["school"],
                      this.selectedLocation = response.data["location"]
                      console.log(response.data["job"])
                  })
          },

          getUsers: function(response){
            
            for (let index = 0; index < response.data.length; index++) {
                var id = response.data[index].studentId
                var pathUrl = "Student/" + id
                axios.get(baseUrl + pathUrl, axiosConfig)
                  .then(response => {
                    this.users.push(response.data)
                    test = response.data;
                  })
            }
            console.log(this.users)
            
          },
          
        }
    })
 </script>
}
